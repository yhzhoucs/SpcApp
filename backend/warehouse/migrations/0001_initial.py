# Generated by Django 3.2.5 on 2021-08-02 06:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='control_plan_info',
            fields=[
                ('uid', models.CharField(help_text='测量控制计划编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('type', models.IntegerField(choices=[(0, 'Xbar-R'), (1, 'Xbar-s'), (2, 'I-MR'), (3, 'p'), (4, 'np'), (5, 'c'), (6, 'u')], help_text='控制图类型')),
                ('usl', models.FloatField(help_text='上规格界限', max_length=12, null=True)),
                ('lsl', models.FloatField(help_text='下规格界限', max_length=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='measure_form_info',
            fields=[
                ('uid', models.CharField(help_text='测量单标识符', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('measure_form_id', models.CharField(help_text='测量单编号', max_length=11)),
                ('sample_size', models.IntegerField(help_text='测量样本容量', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_time', models.DateTimeField(help_text='测量起始时间')),
                ('end_time', models.DateTimeField(help_text='测量结束时间')),
                ('operator_id', models.CharField(help_text='操作者编号', max_length=11, validators=[django.core.validators.MinLengthValidator(11)])),
            ],
        ),
        migrations.CreateModel(
            name='product_info',
            fields=[
                ('uid', models.CharField(help_text='产品编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('name', models.CharField(help_text='产品名称', max_length=20)),
                ('type', models.CharField(help_text='产品型号', max_length=30)),
                ('description', models.CharField(help_text='产品描述', max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='storage_cell_info',
            fields=[
                ('uid', models.CharField(help_text='储位编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('capacity', models.IntegerField(help_text='容量', validators=[django.core.validators.MinValueValidator(0)])),
                ('occupy', models.IntegerField(help_text='占用', validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='warehouse_info',
            fields=[
                ('uid', models.CharField(help_text='仓库编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('name', models.CharField(help_text='仓库名称', max_length=20)),
                ('users', models.ManyToManyField(related_name='warehouses', to='user.user_account_info')),
            ],
        ),
        migrations.CreateModel(
            name='storage_cell_product_relationship',
            fields=[
                ('uid', models.CharField(help_text='储位零件关系编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('number', models.IntegerField(help_text='存量', validators=[django.core.validators.MinValueValidator(0)])),
                ('time', models.DateTimeField(help_text='存储开始时间')),
                ('storage_cell', models.ForeignKey(help_text='关联储位', on_delete=django.db.models.deletion.CASCADE, related_name='product_info', related_query_name='product_infos', to='warehouse.storage_cell_info')),
            ],
        ),
        migrations.AddField(
            model_name='storage_cell_info',
            name='warehouse',
            field=models.ForeignKey(help_text='从属仓库', on_delete=django.db.models.deletion.CASCADE, related_name='storagecells', related_query_name='storagecell', to='warehouse.warehouse_info'),
        ),
        migrations.CreateModel(
            name='shipment_info',
            fields=[
                ('uid', models.CharField(help_text='出库单编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('shipping_time', models.DateTimeField(help_text='出库时间')),
                ('number', models.IntegerField(help_text='出库数量', validators=[django.core.validators.MinValueValidator(0)])),
                ('cell', models.ForeignKey(help_text='从属储位', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipment_info', related_query_name='shipment_infos', to='warehouse.storage_cell_info')),
                ('operator', models.ForeignKey(help_text='操作员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipment_info', related_query_name='shipment_infos', to='user.user_account_info')),
                ('product', models.ForeignKey(help_text='零件', on_delete=django.db.models.deletion.CASCADE, related_name='shipment_info', related_query_name='shipment_infos', to='warehouse.product_info')),
            ],
        ),
        migrations.CreateModel(
            name='parameter_info',
            fields=[
                ('uid', models.CharField(help_text='参数标识符', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('parameter_id', models.IntegerField(help_text='参数编号', validators=[django.core.validators.MinValueValidator(0)])),
                ('name', models.CharField(help_text='参数名称', max_length=20)),
                ('value_type', models.IntegerField(choices=[(0, 'UNCOUNTABLE'), (1, 'COUNTABLE')], help_text='数值类型')),
                ('scale', models.CharField(help_text='小数位数', max_length=2)),
                ('unit', models.CharField(help_text='参数单位', max_length=10)),
                ('description', models.CharField(help_text='参数描述', max_length=256, null=True)),
                ('product', models.ForeignKey(help_text='从属零件', on_delete=django.db.models.deletion.CASCADE, related_name='parameters', related_query_name='parameter', to='warehouse.product_info')),
            ],
        ),
        migrations.CreateModel(
            name='parameter_data_info',
            fields=[
                ('uid', models.CharField(help_text='数据编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('sample_id', models.IntegerField(help_text='组内样本编号', validators=[django.core.validators.MinValueValidator(0)])),
                ('value', models.FloatField(help_text='数据数值', max_length=11)),
                ('measure_form', models.ForeignKey(help_text='从属测量单', on_delete=django.db.models.deletion.CASCADE, related_name='parameter_datas', related_query_name='parameter_data', to='warehouse.measure_form_info')),
                ('parameter', models.ForeignKey(help_text='从属测量参数', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='warehouse.parameter_info')),
            ],
        ),
        migrations.CreateModel(
            name='measure_plan_info',
            fields=[
                ('uid', models.CharField(help_text='测量计划编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('sample_size', models.IntegerField(help_text='计划样本容量', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('current_uid', models.CharField(help_text='当前批号', max_length=11, null=True)),
                ('batch_count', models.IntegerField(help_text='默认批数', validators=[django.core.validators.MinValueValidator(0)])),
                ('entry_info', models.ForeignKey(help_text='关联储位', on_delete=django.db.models.deletion.CASCADE, related_name='measure_plans', to='warehouse.storage_cell_product_relationship')),
                ('product', models.ForeignKey(help_text='关联产品', on_delete=django.db.models.deletion.CASCADE, related_name='measure_plans', to='warehouse.product_info')),
                ('user', models.ForeignKey(help_text='从属者', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measure_plan_info', to='user.user_account_info')),
            ],
        ),
        migrations.AddField(
            model_name='measure_form_info',
            name='measure_plan',
            field=models.ForeignKey(help_text='从属测量计划', on_delete=django.db.models.deletion.CASCADE, related_name='measure_forms', related_query_name='measure_form', to='warehouse.measure_plan_info'),
        ),
        migrations.CreateModel(
            name='entry_info',
            fields=[
                ('uid', models.CharField(help_text='入库单编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('entry_time', models.DateTimeField(help_text='入库时间')),
                ('number', models.IntegerField(help_text='入库数量', validators=[django.core.validators.MinValueValidator(0)])),
                ('cell', models.ForeignKey(help_text='从属储位', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entry_info', related_query_name='entry_infos', to='warehouse.storage_cell_info')),
                ('operator', models.ForeignKey(help_text='操作员', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entry_info', related_query_name='entry_infos', to='user.user_account_info')),
                ('product', models.ForeignKey(help_text='零件', on_delete=django.db.models.deletion.CASCADE, related_name='entry_info', related_query_name='entry_infos', to='warehouse.product_info')),
            ],
        ),
        migrations.CreateModel(
            name='control_point_info',
            fields=[
                ('uid', models.CharField(help_text='控制点编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('sample_size', models.IntegerField(help_text='样本容量', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('x', models.FloatField(help_text='平均值', max_length=12, null=True)),
                ('r', models.FloatField(help_text='极差', max_length=12, null=True)),
                ('s', models.FloatField(help_text='标准差', max_length=12, null=True)),
                ('p', models.IntegerField(help_text='频数', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('np', models.FloatField(help_text='频率', max_length=6, null=True)),
                ('c', models.FloatField(help_text='平均计数', max_length=6, null=True)),
                ('u', models.FloatField(help_text='平均单位计数', max_length=6, null=True)),
                ('control_plan', models.ForeignKey(help_text='从属控制计划', on_delete=django.db.models.deletion.CASCADE, related_name='control_points', related_query_name='control_point', to='warehouse.control_plan_info')),
                ('measure_form', models.ForeignKey(help_text='从属测量单', on_delete=django.db.models.deletion.CASCADE, related_name='control_points', related_query_name='control_point', to='warehouse.measure_form_info')),
            ],
        ),
        migrations.AddField(
            model_name='control_plan_info',
            name='parameter',
            field=models.OneToOneField(help_text='关联参数', on_delete=django.db.models.deletion.CASCADE, related_name='control_plan', to='warehouse.parameter_info'),
        ),
        migrations.CreateModel(
            name='abnormality_info',
            fields=[
                ('uid', models.CharField(help_text='异常信息编号', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(11)])),
                ('start_id', models.CharField(help_text='测量单起始编号', max_length=11)),
                ('end_id', models.CharField(help_text='测量单终止编号', max_length=11)),
                ('information', models.CharField(help_text='异常信息描述', max_length=256)),
                ('reason', models.CharField(help_text='异常信息原因', max_length=256)),
                ('if_read', models.BooleanField(help_text='是否已读')),
                ('abnormality_id', models.ForeignKey(help_text='异常测量单编号', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='warehouse.measure_form_info')),
                ('control_plan', models.ForeignKey(help_text='关联控制计划', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='warehouse.control_plan_info')),
                ('measure_plan', models.ForeignKey(help_text='关联测量计划', on_delete=django.db.models.deletion.CASCADE, related_name='abnormalities', related_query_name='abnormality', to='warehouse.measure_plan_info')),
            ],
        ),
    ]
